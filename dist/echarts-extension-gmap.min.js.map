{"version":3,"file":"echarts-extension-gmap.min.js","sources":["../src/helper.js","../src/GMapCoordSys.js","../src/GMapModel.js","../src/GMapView.js","../src/index.js","../index.js"],"sourcesContent":["import { version } from 'echarts/lib/echarts'\n\nexport const ecVer = version.split('.')\n\nexport const isNewEC = ecVer[0] > 4\n\nexport const COMPONENT_TYPE = 'gmap'\n\nexport function v2Equal(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1]\n}\n","/* global google */\n\nimport { util as zrUtil, graphic, matrix } from 'echarts/lib/echarts'\nimport { COMPONENT_TYPE } from './helper'\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0]\n  return zrUtil.map(\n    [0, 1],\n    function(dimIdx) {\n      const val = dataItem[dimIdx]\n      const halfSize = dataSize[dimIdx] / 2\n      const p1 = []\n      const p2 = []\n      p1[dimIdx] = val - halfSize\n      p2[dimIdx] = val + halfSize\n      p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx]\n      return Math.abs(\n        this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]\n      )\n    },\n    this\n  )\n}\n\nfunction GMapCoordSys(gmap, api) {\n  this._gmap = gmap\n  this.dimensions = ['lng', 'lat']\n  this._mapOffset = [0, 0]\n  this._api = api\n}\n\nconst GMapCoordSysProto = GMapCoordSys.prototype\n\n// exclude private and unsupported options\nconst excludedOptions = [\n  'echartsLayerZIndex',\n  'renderOnMoving'\n]\n\nGMapCoordSysProto.setZoom = function(zoom) {\n  this._zoom = zoom\n}\n\nGMapCoordSysProto.setCenter = function(center) {\n  const latlng = new google.maps.LatLng(center[1], center[0])\n  this._center = latLngToPixel(latlng, this._gmap)\n}\n\nGMapCoordSysProto.setMapOffset = function(mapOffset) {\n  this._mapOffset = mapOffset\n}\n\nGMapCoordSysProto.setGoogleMap = function(gmap) {\n  this._gmap = gmap\n}\n\nGMapCoordSysProto.getGoogleMap = function() {\n  return this._gmap\n}\n\nGMapCoordSysProto.dataToPoint = function(data) {\n  const latlng = new google.maps.LatLng(data[1], data[0])\n  const px = latLngToPixel(latlng, this._gmap)\n  const mapOffset = this._mapOffset\n  return [px.x - mapOffset[0], px.y - mapOffset[1]]\n}\n\nGMapCoordSysProto.pointToData = function(pt) {\n  const mapOffset = this._mapOffset\n  const latlng = pixelToLatLng(\n    new google.maps.Point(pt[0] + mapOffset[0], pt[1] + mapOffset[1]),\n    this._gmap\n  )\n  return [latlng.lng(), latlng.lat()]\n}\n\nGMapCoordSysProto.getViewRect = function() {\n  const api = this._api\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight())\n}\n\nGMapCoordSysProto.getRoamTransform = function() {\n  return matrix.create()\n}\n\nGMapCoordSysProto.prepareCustoms = function() {\n  const rect = this.getViewRect()\n  return {\n    coordSys: {\n      type: COMPONENT_TYPE,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(this.dataToPoint, this),\n      size: zrUtil.bind(dataToCoordSize, this)\n    }\n  }\n}\n\nGMapCoordSysProto.convertToPixel = function(ecModel, finder, value) {\n  // here we don't use finder as only one google map component is allowed\n  return this.dataToPoint(value);\n}\n\nGMapCoordSysProto.convertFromPixel = function(ecModel, finder, value) {\n  // here we don't use finder as only one google map component is allowed\n  return this.pointToData(value);\n}\n\nGMapCoordSys.create = function(ecModel, api) {\n  let gmapCoordSys\n  const root = api.getDom()\n\n  ecModel.eachComponent(COMPONENT_TYPE, function(gmapModel) {\n    const painter = api.getZr().painter\n    const viewportRoot = painter.getViewportRoot()\n    if (typeof google === 'undefined' || !google.maps || !google.maps.Map) {\n      throw new Error('Google Map API is not loaded')\n    }\n    Overlay = Overlay || createOverlayCtor()\n    if (gmapCoordSys) {\n      throw new Error('Only one google map component is allowed')\n    }\n    let gmap = gmapModel.getGoogleMap()\n    if (!gmap) {\n      // Not support IE8\n      const className = 'ec-extension-google-map'\n      let gmapRoot = root.querySelector('.' + className)\n      if (gmapRoot) {\n        // Reset viewport left and top, which will be changed\n        // in moving handler in GMapView\n        viewportRoot.style.left = '0'\n        viewportRoot.style.top = '0'\n        root.removeChild(gmapRoot)\n      }\n      gmapRoot = document.createElement('div')\n      gmapRoot.className = className\n      gmapRoot.style.cssText = 'position:absolute;top:0;left:0;right:0;bottom:0'\n      root.appendChild(gmapRoot)\n\n      const options = zrUtil.clone(gmapModel.get())\n      const echartsLayerZIndex = options.echartsLayerZIndex\n      // delete excluded options\n      zrUtil.each(excludedOptions, function(key) {\n        delete options[key]\n      })\n      const center = options.center\n      // normalize center\n      if (zrUtil.isArray(center)) {\n        options.center = {\n          lng: center[0],\n          lat: center[1]\n        }\n      }\n\n      gmap = new google.maps.Map(gmapRoot, options)\n      gmapModel.setGoogleMap(gmap)\n\n      gmapModel.__projectionChangeListener && gmapModel.__projectionChangeListener.remove()\n      gmapModel.__projectionChangeListener = google.maps.event.addListener(gmap, 'projection_changed',\n        function() {\n          const layer = gmapModel.getEChartsLayer()\n          layer && layer.setMap(null)\n\n          const overlay = new Overlay(viewportRoot, gmap)\n          overlay.setZIndex(echartsLayerZIndex)\n          gmapModel.setEChartsLayer(overlay)\n        }\n      )\n\n      // Override\n      painter.getViewportRootOffset = function() {\n        return { offsetLeft: 0, offsetTop: 0 }\n      }\n    }\n\n    const center = gmapModel.get('center')\n    const normalizedCenter = [\n      center.lng != null ? center.lng : center[0],\n      center.lat != null ? center.lat : center[1]\n    ]\n    const zoom = gmapModel.get('zoom')\n    if (center && zoom) {\n      const gmapCenter = gmap.getCenter()\n      const gmapZoom = gmap.getZoom()\n      const centerOrZoomChanged = gmapModel.centerOrZoomChanged([gmapCenter.lng(), gmapCenter.lat()], gmapZoom)\n      if (centerOrZoomChanged) {\n        const pt = new google.maps.LatLng(normalizedCenter[1], normalizedCenter[0])\n        gmap.setOptions({\n          center: pt,\n          zoom: zoom\n        })\n      }\n    }\n\n    gmapCoordSys = new GMapCoordSys(gmap, api)\n    gmapCoordSys.setMapOffset(gmapModel.__mapOffset || [0, 0])\n    gmapCoordSys.setZoom(zoom)\n    gmapCoordSys.setCenter(normalizedCenter)\n\n    gmapModel.coordinateSystem = gmapCoordSys\n  })\n\n  ecModel.eachSeries(function(seriesModel) {\n    if (seriesModel.get('coordinateSystem') === COMPONENT_TYPE) {\n      seriesModel.coordinateSystem = gmapCoordSys\n    }\n  })\n\n  // return created coordinate systems\n  return gmapCoordSys && [gmapCoordSys]\n}\n\nlet Overlay\n\nfunction createOverlayCtor() {\n    function Overlay(root, gmap) {\n      this._root = root\n      this.setMap(gmap)\n    }\n\n    Overlay.prototype = new google.maps.OverlayView()\n\n    Overlay.prototype.onAdd = function() {\n      const gmap = this.getMap()\n      gmap.__overlayProjection = this.getProjection()\n      gmap.getDiv().querySelector('.gm-style > div').appendChild(this._root)\n    }\n\n    /**\n     * @override\n     */\n    Overlay.prototype.draw = function() {\n      google.maps.event.trigger(this.getMap(), 'gmaprender')\n    }\n\n    Overlay.prototype.onRemove = function() {\n      this._root.parentNode.removeChild(this._root)\n      this._root = null\n    }\n\n    Overlay.prototype.setZIndex = function(zIndex) {\n      this._root.style.zIndex = zIndex\n    }\n\n    Overlay.prototype.getZIndex = function() {\n      return this._root.style.zIndex\n    }\n\n    return Overlay\n}\n\nfunction latLngToPixel(latLng, map) {\n  const projection = map.__overlayProjection\n  if (!projection) {\n    return new google.maps.Point(-Infinity, -Infinity)\n  }\n\n  return projection.fromLatLngToContainerPixel(latLng)\n}\n\nfunction pixelToLatLng(pixel, map) {\n  const projection = map.__overlayProjection\n  if (!projection) {\n    return new google.maps.Point(-Infinity, -Infinity)\n  }\n\n  return projection.fromContainerPixelToLatLng(pixel)\n}\n\nGMapCoordSysProto.dimensions = GMapCoordSys.dimensions = ['lng', 'lat']\n\nGMapCoordSysProto.type = COMPONENT_TYPE\n\nexport default GMapCoordSys\n","import { ComponentModel } from 'echarts/lib/echarts'\nimport { COMPONENT_TYPE, isNewEC, v2Equal } from './helper'\n\nconst GMapModel = {\n  type: COMPONENT_TYPE,\n\n  setGoogleMap(gmap) {\n    this.__gmap = gmap\n  },\n\n  getGoogleMap() {\n    // __gmap is set when creating GMapCoordSys\n    return this.__gmap\n  },\n\n  setEChartsLayer(layer) {\n    this.__echartsLayer = layer\n  },\n\n  getEChartsLayer() {\n    return this.__echartsLayer\n  },\n\n  setCenterAndZoom(center, zoom) {\n    this.option.center = center\n    this.option.zoom = zoom\n  },\n\n  centerOrZoomChanged(center, zoom) {\n    const option = this.option\n    return !(v2Equal(center, option.center) && zoom === option.zoom)\n  },\n\n  defaultOption: {\n    center: { lat: 39.90923, lng: 116.397428 },\n    zoom: 5,\n\n    // extension options\n    // since v1.4.0\n    roam: true,\n    echartsLayerZIndex: 2000,\n    renderOnMoving: true\n  }\n}\n\nexport default isNewEC\n  ? ComponentModel.extend(GMapModel)\n  : GMapModel\n","/* global google */\n\nimport { ComponentView, getInstanceByDom, throttle } from 'echarts/lib/echarts'\nimport { isNewEC, COMPONENT_TYPE } from './helper'\n\nconst GMapView = {\n  type: COMPONENT_TYPE,\n\n  render(gmapModel, ecModel, api) {\n    let rendering = true\n\n    const gmap = gmapModel.getGoogleMap()\n    const viewportRoot = api.getZr().painter.getViewportRoot()\n    const coordSys = gmapModel.coordinateSystem\n    const renderOnMoving = gmapModel.get('renderOnMoving')\n    const offsetEl = gmap.getDiv()\n    const mapEl = offsetEl.firstChild\n    const oldWidth = mapEl.clientWidth\n    const oldHeight = mapEl.clientHeight\n\n    let renderHandler = function() {\n      if (rendering) {\n        return\n      }\n\n      // reduce unnecessary resize\n      if (mapEl.clientWidth !== oldWidth || mapEl.clientHeight !== oldHeight) {\n        return resizeHandler()\n      }\n\n      const mapOffset = [\n        -parseInt(offsetEl.style.left, 10) || 0,\n        -parseInt(offsetEl.style.top, 10) || 0\n      ]\n      viewportRoot.style.left = mapOffset[0] + 'px'\n      viewportRoot.style.top = mapOffset[1] + 'px'\n\n      coordSys.setMapOffset(mapOffset)\n      gmapModel.__mapOffset = mapOffset\n\n      api.dispatchAction({\n        type: COMPONENT_TYPE + 'Roam',\n        animation: {\n          // in ECharts 5.x,\n          // we can set animation duration as 0\n          // to ensure no delay when moving or zooming\n          duration: 0\n        }\n      })\n    }\n\n    let resizeHandler = function() {\n      // fix chart can't get resized correctly after the google map enters fullscreen\n      // See also #14\n      getInstanceByDom(api.getDom()).resize({\n        width: mapEl.clientWidth,\n        height: mapEl.clientHeight\n      })\n    }\n\n    this._renderHandler && this._renderHandler.remove()\n\n    if (!renderOnMoving) {\n      // PENDING hide layer when rendering\n      renderHandler = throttle(renderHandler, 100, true)\n      resizeHandler = throttle(resizeHandler, 100, true)\n    }\n    this._renderHandler = google.maps.event.addListener(\n      gmap,\n      renderOnMoving ? 'gmaprender' : 'idle',\n      renderHandler\n    )\n\n    gmap.setOptions({\n      gestureHandling: gmapModel.get('roam') ? 'auto' : 'none'\n    })\n\n    rendering = false\n  },\n\n  dispose() {\n    this._renderHandler && this._renderHandler.remove()\n    delete this._renderHandler\n\n    const component = this.__model\n    if (!component) {\n      return\n    }\n\n    const gmapInstance = component.getGoogleMap()\n\n    if (gmapInstance) {\n      // remove injected projection\n      delete gmapInstance.__overlayProjection\n\n      // clear all listeners of map instance\n      google.maps.event.clearInstanceListeners(gmapInstance)\n\n      // remove DOM of map instance\n      const mapDiv = gmapInstance.getDiv()\n      mapDiv.parentNode && mapDiv.parentNode.removeChild(mapDiv)\n    }\n\n    component.setGoogleMap(null)\n    component.setEChartsLayer(null)\n\n    if (component.coordinateSystem) {\n      component.coordinateSystem.setGoogleMap(null)\n      component.coordinateSystem = null\n    }\n  }\n}\n\nexport default isNewEC\n  ? ComponentView.extend(GMapView)\n  : GMapView\n","/**\n * Google Map component extension\n */\n\n import GMapCoordSys from './GMapCoordSys'\n import GMapModel from './GMapModel'\n import GMapView from './GMapView'\n import { isNewEC, ecVer, COMPONENT_TYPE } from './helper'\n\nexport { version, name } from '../package.json';\n\n/**\n * @typedef {import('../export').EChartsExtensionRegisters} EChartsExtensionRegisters\n */\n\n/**\n * Google Map extension installer\n * @param {EChartsExtensionRegisters} registers\n */\n export function install(registers) {\n  // add coordinate system support for pie series for ECharts < 5.4.0\n  if (!isNewEC || (ecVer[0] == 5 && ecVer[1] < 4)) {\n    registers.registerLayout(function(ecModel) {\n      ecModel.eachSeriesByType('pie', function (seriesModel) {\n        const coordSys = seriesModel.coordinateSystem\n        const data = seriesModel.getData()\n        const valueDim = data.mapDimension('value')\n        if (coordSys && coordSys.type === COMPONENT_TYPE) {\n          const center = seriesModel.get('center')\n          const point = coordSys.dataToPoint(center)\n          const cx = point[0]\n          const cy = point[1]\n          data.each(valueDim, function (value, idx) {\n            const layout = data.getItemLayout(idx)\n            layout.cx = cx\n            layout.cy = cy\n          })\n        }\n      })\n    })\n  }\n  // Model\n  isNewEC\n    ? registers.registerComponentModel(GMapModel)\n    : registers.extendComponentModel(GMapModel)\n  // View\n  isNewEC\n    ? registers.registerComponentView(GMapView)\n    : registers.extendComponentView(GMapView)\n  // Coordinate System\n  registers.registerCoordinateSystem(COMPONENT_TYPE, GMapCoordSys)\n  // Action\n  registers.registerAction(\n    {\n      type: COMPONENT_TYPE + 'Roam',\n      event: COMPONENT_TYPE + 'Roam',\n      update: 'updateLayout'\n    },\n    function(payload, ecModel) {\n      ecModel.eachComponent(COMPONENT_TYPE, function(gmapModel) {\n        const gmap = gmapModel.getGoogleMap()\n        const center = gmap.getCenter()\n        gmapModel.setCenterAndZoom([center.lng(), center.lat()], gmap.getZoom())\n      })\n    }\n  )\n}\n","import * as echarts from 'echarts/lib/echarts'\nimport { install } from './src/index'\nimport { isNewEC } from './src/helper'\n\nisNewEC ? echarts.use(install) : install(echarts)\n\nexport { name, version } from './src/index'\n"],"names":["ecVer","version","split","isNewEC","COMPONENT_TYPE","dataToCoordSize","dataSize","dataItem","zrUtil","map","dimIdx","val","halfSize","p1","p2","Math","abs","this","dataToPoint","GMapCoordSys","gmap","api","_gmap","dimensions","_mapOffset","_api","Overlay","GMapCoordSysProto","prototype","excludedOptions","latLngToPixel","latLng","projection","__overlayProjection","fromLatLngToContainerPixel","google","maps","Point","Infinity","setZoom","zoom","_zoom","setCenter","center","latlng","LatLng","_center","setMapOffset","mapOffset","setGoogleMap","getGoogleMap","data","px","x","y","pointToData","pt","pixel","fromContainerPixelToLatLng","pixelToLatLng","lng","lat","getViewRect","graphic","BoundingRect","getWidth","getHeight","getRoamTransform","matrix","create","prepareCustoms","rect","coordSys","type","width","height","coord","bind","size","util","convertToPixel","ecModel","finder","value","convertFromPixel","gmapCoordSys","root","getDom","eachComponent","gmapModel","painter","getZr","viewportRoot","getViewportRoot","Map","Error","_root","setMap","OverlayView","onAdd","getMap","getProjection","getDiv","querySelector","appendChild","draw","event","trigger","onRemove","parentNode","removeChild","setZIndex","zIndex","style","getZIndex","createOverlayCtor","className","gmapRoot","left","top","document","createElement","cssText","options","clone","get","echartsLayerZIndex","each","key","isArray","__projectionChangeListener","remove","addListener","layer","getEChartsLayer","overlay","setEChartsLayer","getViewportRootOffset","offsetLeft","offsetTop","normalizedCenter","gmapCenter","getCenter","gmapZoom","getZoom","centerOrZoomChanged","setOptions","__mapOffset","coordinateSystem","eachSeries","seriesModel","GMapModel","__gmap","__echartsLayer","setCenterAndZoom","option","a","b","defaultOption","roam","renderOnMoving","ComponentModel","extend","GMapView","render","rendering","offsetEl","mapEl","firstChild","oldWidth","clientWidth","oldHeight","clientHeight","renderHandler","resizeHandler","parseInt","dispatchAction","animation","duration","getInstanceByDom","resize","_renderHandler","throttle","gestureHandling","dispose","component","__model","gmapInstance","clearInstanceListeners","mapDiv","ComponentView","install","registers","registerLayout","eachSeriesByType","getData","valueDim","mapDimension","point","cx","cy","idx","layout","getItemLayout","registerComponentModel","extendComponentModel","registerComponentView","extendComponentView","registerCoordinateSystem","registerAction","update","payload","echarts","use"],"mappings":"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"}